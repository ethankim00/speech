{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "13ea7605-a2d8-4877-a16f-1804ad09113a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import sys\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9ccd38c3-88cd-4acc-ba5e-b2bd1d9f50a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_wav_files(path: str):\n",
    "    filenames = []\n",
    "    for subdir, dirs, files in os.walk(path):\n",
    "        for file in files:\n",
    "            if file.endswith(\"wav\"):\n",
    "                filenames.append(os.path.join(subdir, file))\n",
    "    return filenames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "900d2e44-c161-41cf-b564-1944c691940c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# TODO might need to do some additional preprocessing to split /truncate audio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f96dd78-7630-49a0-90b2-54672ff0959a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "83887956-9591-422e-a799-aa157b19f6b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "def build_dataframe_for_classification(td_path:str, ssd_path:str):\n",
    "    \"\"\"\n",
    "    Build DataFrame for Speaker Classification Problem\n",
    "    \"\"\"\n",
    "    ssd_filenames = get_wav_files(ssd_path)\n",
    "    td_filenames = get_wav_files(td_path)\n",
    "    df = pd.DataFrame()\n",
    "    df[\"file_path\"] = ssd_filenames + td_filenames\n",
    "    df[\"labels\"] = [\"disordered\" for _ in range(len(ssd_filenames))] + [\"typical\" for _ in range(len(td_filenames))]\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a73f1d3b-ab9e-4c7a-97a1-484574ba4d95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_path</th>\n",
       "      <th>labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>../data/data/ssd/wav/01F-BL1-012A.wav</td>\n",
       "      <td>disordered</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>../data/data/ssd/wav/01M-BL1-014A.wav</td>\n",
       "      <td>disordered</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>../data/data/ssd/wav/01F-BL1-004A.wav</td>\n",
       "      <td>disordered</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>../data/data/ssd/wav/01M-BL1-002A.wav</td>\n",
       "      <td>disordered</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>../data/data/ssd/wav/01F-BL1-028A.wav</td>\n",
       "      <td>disordered</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>../data/data/td/wav/01M-030B.wav</td>\n",
       "      <td>typical</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>../data/data/td/wav/01M-031B.wav</td>\n",
       "      <td>typical</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>../data/data/td/wav/01M-027A.wav</td>\n",
       "      <td>typical</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>../data/data/td/wav/01M-007B.wav</td>\n",
       "      <td>typical</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>../data/data/td/wav/01M-011B.wav</td>\n",
       "      <td>typical</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>114 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 file_path      labels\n",
       "0    ../data/data/ssd/wav/01F-BL1-012A.wav  disordered\n",
       "1    ../data/data/ssd/wav/01M-BL1-014A.wav  disordered\n",
       "2    ../data/data/ssd/wav/01F-BL1-004A.wav  disordered\n",
       "3    ../data/data/ssd/wav/01M-BL1-002A.wav  disordered\n",
       "4    ../data/data/ssd/wav/01F-BL1-028A.wav  disordered\n",
       "..                                     ...         ...\n",
       "109       ../data/data/td/wav/01M-030B.wav     typical\n",
       "110       ../data/data/td/wav/01M-031B.wav     typical\n",
       "111       ../data/data/td/wav/01M-027A.wav     typical\n",
       "112       ../data/data/td/wav/01M-007B.wav     typical\n",
       "113       ../data/data/td/wav/01M-011B.wav     typical\n",
       "\n",
       "[114 rows x 2 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "build_dataframe_for_classification(\"../data/data/td/\", \"../data/data/ssd/\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "56490a18-4f58-4bc0-ab61-477660b56c4f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
